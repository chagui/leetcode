load("@rules_cc//cc:defs.bzl", "cc_binary")

cc_binary(
    name = "add-binary",
    srcs = ["add-binary.cpp"],
)


cc_binary(
    name = "add-two-numbers",
    srcs = ["add-two-numbers.cpp"],
)

cc_binary(
    name = "construct-k-palindrome-strings",
    srcs = ["construct-k-palindrome-strings.cpp"],
)

cc_binary(
    name = "image-overlap",
    srcs = ["image-overlap.cpp"],
)

cc_binary(
    name = "letter-combinations-of-a-phone-number",
    srcs = ["letter-combinations-of-a-phone-number.cpp"],
)

cc_binary(
    name = "longest-common-prefix",
    srcs = ["longest-common-prefix.cpp"],
)

cc_binary(
    name = "longest-substring-without-repeating-characters",
    srcs = ["longest-substring-without-repeating-characters.cpp"],
)

cc_binary(
    name = "median-of-two-sorted-arrays",
    srcs = ["median-of-two-sorted-arrays.cpp"],
)

cc_binary(
    name = "merge-two-binary-trees",
    srcs = ["merge-two-binary-trees.cpp"],
)

cc_binary(
    name = "minimum-depth-of-binary-tree",
    srcs = ["minimum-depth-of-binary-tree.cpp"],
)

cc_binary(
    name = "partition-list",
    srcs = ["partition-list.cpp"],
)

cc_binary(
    name = "range-sum-of-bst",
    srcs = ["range-sum-of-bst.cpp"],
)

cc_binary(
    name = "rectangle-area",
    srcs = ["rectangle-area.cpp"],
)

cc_binary(
    name = "remove-k-digits",
    srcs = ["remove-k-digits.cpp"],
)

cc_binary(
    name = "reverse-integer",
    srcs = ["reverse-integer.cpp"],
)

cc_binary(
    name = "roman-to-integer",
    srcs = ["roman-to-integer.cpp"],
)

cc_binary(
    name = "search-insert-position",
    srcs = ["search-insert-position.cpp"],
)

cc_binary(
    name = "two-sum-ii-input-array-is-sorted",
    srcs = ["two-sum-ii-input-array-is-sorted.cpp"],
)

cc_binary(
    name = "two-sum",
    srcs = ["two-sum.cpp"],
)

cc_binary(
    name = "validate-binary-search-tree",
    srcs = ["validate-binary-search-tree.cpp"],
)
